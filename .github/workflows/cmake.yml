name: Build

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]
    workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Debug
    PRESET: linux-debug

jobs:
    build:
        name: Check
        # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
        # You can convert this to a matrix build if you need cross-platform coverage.
        # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: ubuntu-latest

        steps:
        - name: Setup repository
          uses: actions/checkout@v3

        - name: Install packages
          run:
            sudo apt-get install -y libsfml-dev g++

        - name: Configure CMake
          # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
          # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
          run: cmake --preset ${{ env.PRESET }}


        - name: Build
          # Build your program with the given configuration
          run: cmake --build --preset ${{ env.PRESET }}

        - name: Run unit tests
          working-directory: ./out/build/linux-debug/bin
          # Execute tests defined by the CMake configuration.
          # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
          run: ./run-tests

